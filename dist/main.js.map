{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/user.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/rxjs-extensions.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/polyfills.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class User {\n  id: string;\n  username: string;\n  password: string;\n  admin: boolean;\n  token: string;\n  auth: boolean;\n  firstName: string;\n  lastName: string;\n  email: string;\n  active: boolean;\n}\n","\nimport { Observable, throwError }                                           from 'rxjs';\nimport { catchError, map, tap }                                             from 'rxjs/operators';\nimport { Injectable, OnInit }                                               from '@angular/core';\nimport { Router }                                                           from '@angular/router';\nimport { HttpClient, HttpErrorResponse }                                    from '@angular/common/http';\nimport { User }                                                             from '../_models/user';\nimport { environment }                                                      from '../../environments/environment';\n// import { NavbarComponent }                                               from '../navbar/navbar.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService implements OnInit {\n  public user = new User;\n  private url = environment.apiUrlBase;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.checkLogin();\n    console.log(\"found user : \", localStorage.getItem('username') );\n  }\n\n  register(username: string, password: string, firstName: string, lastName: string, email: string): Observable<any> {\n    console.log(\"make\");\n    return this.http\n      .post<any>(this.url + \"setup\", { username: username, password: password, firstName: firstName, lastName: lastName, email: email })\n      .pipe(\n        catchError(this.handleError)\n      );\n      //,{headers:this.headers});\n      // .post(this.url + \"setup\", JSON.stringify({ username: username, password: password, firstName: firstName, lastName: lastName, email: email }), { headers: this.headers })\n      // .map(this.extractData)\n      // .catch(this.handleError);    pre HttpClient way of doing this\n  }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http\n      .post<any>(this.url + \"auth\", { username: username, password: password})\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  setAuth(data){\n    this.user.auth = data.success;\n    this.user.admin = data.admin;\n    this.user.token = data.token;\n    this.user.id = data.userId;\n    this.user.username = data.username;\n    localStorage.setItem('auth', data.success);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('username', data.username);\n    localStorage.setItem('userId', data.userId);\n    localStorage.setItem('admin', data.admin);\n  }\n\n  setUser(data){\n    console.log(data, ' : id sat' );\n    this.user = data.user;\n    this.user.auth = data.success;\n  }\n\n  checkUser(username: string): Observable<any> {\n    var token = localStorage.getItem('token') ? '?token=' + localStorage.getItem('token') : '';\n    if (this.user.auth) {\n      return this.http\n        .post<any>(this.url + \"user\" + token, {username: username})\n        .pipe(\n          catchError(this.handleError)\n        );\n        // .post(this.url + \"user\" + token, JSON.stringify({ username: username }), { headers: this.headers })\n        // .map(this.extractData)\n        // .catch(this.handleError); pre HttpClient way of doing this\n    }\n    else {\n      alert(\"Please login\");\n      this.router.navigateByUrl(\"/login\");\n      return;\n    }\n  }\n\n  getUsers(): Observable<any> {\n    var token = localStorage.getItem('token')\n      ? '?token=' + localStorage.getItem('token') : '';\n    return this.http\n      .get<any>(this.url + \"users\" + token)\n      .pipe(\n        catchError(this.handleError)\n      );;\n      // .get(this.url + \"users\" + token, { headers: this.headers })\n      // .map(this.extractData)\n      // .catch(this.handleError);\n  }\n\n  logout() {\n    localStorage.clear();\n    this.checkLogin();\n    this.router.navigateByUrl('/');\n  }\n\n  checkLogin() {\n    this.user.auth = eval(localStorage.getItem('auth'));\n    this.user.token = localStorage.getItem('token');\n    this.user.username = localStorage.getItem('username');\n    this.user.id = localStorage.getItem('userId');\n    this.user.admin = eval(localStorage.getItem('admin'));  \n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      alert(\"There was an error, Please check the Console logs.\")\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-header\\\">\\n  <h1>Admin</h1>\\n</div>\\n\\n<div class=\\\"panel panel-info\\\">\\n  <div class=\\\"panel-heading\\\">Users</div>\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Username</th>\\n      <th>Email</th>\\n      <th>First</th>\\n      <th>Last</th>\\n      <th>Active?</th>\\n      <th>Admin?</th>\\n    </tr>\\n    <tr *ngFor=\\\"let user of users\\\">\\n      <td>{{user.username}}</td>\\n      <td>{{user.email}}</td>\\n      <td>{{user.firstName}}</td>\\n      <td>{{user.lastName}}</td>\\n      <td>{{user.active}}</td>\\n      <td>{{user.admin}}</td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit }        from '@angular/core';\nimport { UserService }              from '../_services/user.service';\nimport { Router }                   from '@angular/router';\nimport { User }                     from '../_models/user'\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  errorMessage: string;\n  user: User;\n  users: User[];\n\n  constructor(\n    private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit() {\n    if (this.userService.user.admin == false) {\n      this.router.navigateByUrl('/');\n    } else {\n      this.userService.getUsers()\n        .subscribe(\n        users => {\n          console.log(users);\n          this.users = users;\n          console.log(this.users[0]);\n        },\n        error => {\n          this.errorMessage = <any>error;\n          console.log(error);\n          });\n    }\n\n  }\n\n}\n","module.exports = \"app-root{\\n  margin:0;\\n  padding: 0;\\n}\\nbody {\\n  margin:0;\\n  padding: 0;\\n}\\n\"","module.exports = \"<navbar></navbar>\\n<div class=\\\"container body-container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Dank Swag';\n}\n","import './rxjs-extensions';\nimport { BrowserModule }            from '@angular/platform-browser';\nimport { RouterModule }             from '@angular/router';\nimport { NgModule }                 from '@angular/core';\nimport { FormsModule }              from '@angular/forms';\nimport { HttpClientModule }         from '@angular/common/http';\nimport { routes }                   from './app.routes';\nimport { AppComponent }             from './app.component';\nimport { RegisterComponent }        from './register/register.component';\nimport { LoginComponent }           from './login/login.component';\nimport { HomeComponent }            from './home/home.component';\nimport { NavbarComponent }          from './navbar/navbar.component';\nimport { UserService }              from './_services/user.service';\nimport { ProfileComponent }         from './profile/profile.component';\nimport { AdminComponent }           from './admin/admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent,\n    NavbarComponent,\n    ProfileComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// app.routes.ts\nimport { HomeComponent }      from './home/home.component';\nimport { LoginComponent }     from './login/login.component';\nimport { ProfileComponent }   from './profile/profile.component';\nimport { RegisterComponent }  from './register/register.component';\nimport { AdminComponent}      from './admin/admin.component';\n\nexport const routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'admin', component: AdminComponent }\n];\n","module.exports = \".key{\\n  border : 1px solid black;\\n  width: 40px;\\n  height: 100px;\\n  margin: 0;\\n  padding:8px;\\n  display: inline;\\n}\\n.key:hover{\\n  border : 1px solid blue;\\n}\\n.key:active{\\nbackground-color: #000;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h1 *ngIf=\\\"!this.userService.user.auth\\\">Welcome!</h1>\\n  <h1 *ngIf=\\\"this.userService.user.auth\\\">Hello, {{this.userService.user.username}}!</h1>\\n  <p>This is a basic template made by <a href=\\\"http://www.ryansadowski.xyz\\\">Ryan Sadowski</a></p>\\n  <p><a class=\\\"btn btn-primary btn-lg\\\" href=\\\"http://github.com/RyanSadowski/MEAN2Seed\\\" role=\\\"button\\\">Learn more</a></p>\\n</div>\\n\\n<h3> Slider changes volume</h3>\\n<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"10\\\" value=\\\"0\\\" [(ngModel)]=\\\"volume\\\" (change)=\\\"ChangeVolume($event.target.value)\\\">\\n<!-- <input type=\\\"text\\\" [(ngModel)]=\\\"tone\\\" placeholder=\\\"A4\\\" (change)=\\\"ChangeNote($event.target.value)\\\"> -->\\n<ul id=\\\"waveFormList\\\">\\n  <li><input type=\\\"radio\\\" [(ngModel)]=\\\"oscType\\\" (change)=\\\"ChangeWaveForm($event.target.value)\\\" value=\\\"sine\\\" id=\\\"sine\\\"><span>  sine</span></li>\\n  <li><input type=\\\"radio\\\" [(ngModel)]=\\\"oscType\\\" (change)=\\\"ChangeWaveForm($event.target.value)\\\" value=\\\"square\\\" id=\\\"square\\\"><span>  square</span></li>\\n  <li><input type=\\\"radio\\\" [(ngModel)]=\\\"oscType\\\" (change)=\\\"ChangeWaveForm($event.target.value)\\\" value=\\\"sawtooth\\\" id=\\\"sawtooth\\\"><span>  saw</span></li>\\n  <li><input type=\\\"radio\\\" [(ngModel)]=\\\"oscType\\\" (change)=\\\"ChangeWaveForm($event.target.value)\\\" value=\\\"triangle\\\" id=\\\"triangle\\\"><span>  triangle</span></li>\\n</ul>\\n\\n<div id=\\\"keyboard\\\">\\n  <div (click)=\\\"ChangeNote('C3')\\\" class=\\\"key\\\">C3</div>\\n  <div (click)=\\\"ChangeNote('D3')\\\" class=\\\"key\\\">D3</div>\\n  <div (click)=\\\"ChangeNote('E3')\\\" class=\\\"key\\\">E3</div>\\n  <div (click)=\\\"ChangeNote('F3')\\\" class=\\\"key\\\">F3</div>\\n  <div (click)=\\\"ChangeNote('G3')\\\" class=\\\"key\\\">G3</div>\\n  <div (click)=\\\"ChangeNote('A3')\\\" class=\\\"key\\\">A3</div>\\n  <div (click)=\\\"ChangeNote('B3')\\\" class=\\\"key\\\">B3</div>\\n  <div (click)=\\\"ChangeNote('C4')\\\" class=\\\"key\\\">C4</div>\\n  <div (click)=\\\"ChangeNote('D4')\\\" class=\\\"key\\\">D4</div>\\n  <div (click)=\\\"ChangeNote('E4')\\\" class=\\\"key\\\">E4</div>\\n  <div (click)=\\\"ChangeNote('F4')\\\" class=\\\"key\\\">F4</div>\\n  <div (click)=\\\"ChangeNote('G4')\\\" class=\\\"key\\\">G4</div>\\n  <div (click)=\\\"ChangeNote('A4')\\\" class=\\\"key\\\">A4</div>\\n  <div (click)=\\\"ChangeNote('B4')\\\" class=\\\"key\\\">B4</div>\\n  <div (click)=\\\"ChangeNote('C5')\\\" class=\\\"key\\\">C5</div>\\n  <div (click)=\\\"ChangeNote('D5')\\\" class=\\\"key\\\">D5</div>\\n  <div (click)=\\\"ChangeNote('E5')\\\" class=\\\"key\\\">E5</div>\\n  <div (click)=\\\"ChangeNote('F5')\\\" class=\\\"key\\\">F5</div>\\n  <div (click)=\\\"ChangeNote('G5')\\\" class=\\\"key\\\">G5</div>\\n  <div (click)=\\\"ChangeNote('A5')\\\" class=\\\"key\\\">A5</div>\\n  <div (click)=\\\"ChangeNote('B5')\\\" class=\\\"key\\\">B5</div>\\n</div>\\n\\n\\n<br>\\n\\n<h3>Low Pass filter 0hz - 1000hz</h3>\\n<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"1000\\\" value=\\\"1000\\\" (change)=\\\"ChangeFilter($event.target.value)\\\">\\n<!-- <p class=\\\"muted\\\">Try values like \\\"A4,B5,G2\\\"</p>-->\\n\"","import { Component, OnInit }      from '@angular/core';\nimport { Octavian, Note }         from 'octavian';\nimport { UserService }            from '../_services/user.service'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n\nexport class HomeComponent implements OnInit {\n  midi;\n  volume= 0;\n  oscType = 'sine'\n  gain: number;\n  distortionAmount: number;\n  note = new Note('A4');\n  audioCtx = new (<any>window).AudioContext();\n  oscillator = this.audioCtx.createOscillator();\n  gainNode = this.audioCtx.createGain();\n  distortion = this.audioCtx.createWaveShaper();\n  filter = this.audioCtx.createBiquadFilter();\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.checkLogin()\n    // var auth = this.userService.authenticated;\n    // var username = this.userService.user.username;\n    if ((<any>window).navigator.requestMIDIAccess) {\n      (<any>window).navigator.requestMIDIAccess({\n        sysex: false\n      }).then(this.onMIDISuccess, this.onMIDIFailure);\n    } else {\n      alert(\"No MIDI support in your browser.\");\n    }\n\n    this.ChangeVolume(0);   //start it silent\n    this.oscillator.type = this.oscType;\n    this.oscillator.frequency.value = this.note.frequency; // value in hertz\n    this.distortion.curve = this.MakeDistortion(1);\n    this.filter.type = this.filter.LOWPASS;\n    this.filter.frequency.value = 1000;\n    this.oscillator.connect(this.gainNode);\n    this.gainNode.connect(this.distortion);\n    this.distortion.connect(this.filter);\n    this.filter.connect(this.audioCtx.destination);\n    this.oscillator.start();\n  }\n  ChangeFilter(value:number):void {\n    this.filter.frequency.value = value;\n  }\n  ChangeVolume(value:number):void {\n    this.gain = (value/10);\n    this.gainNode.gain.value = this.gain;\n    console.log( \"Volume changed to:\" + this.volume );\n  }\n  ChangeNote(value:string):void{\n    this.note = new Note(value);\n    this.oscillator.frequency.value = this.note.frequency;\n  }\n  ChangeWaveForm(value:string):void{\n    this.oscType = value;\n    this.oscillator.type = this.oscType;\n  }\n  MakeDistortion( amount ) {\n    var k = typeof amount === 'number' ? amount : 50;\n    var  n_samples = 44100;\n    var curve = new Float32Array(n_samples);\n    var deg = Math.PI / 180;\n    var i = 0;\n    var x;\n    for ( ; i < n_samples; ++i ) {\n      x = i * 2 / n_samples - 1;\n      curve[i] = ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\n    }\n    this.distortion.curve = curve;\n    //console.log( \"distortion changed to:\" + curve );\n  };\n\n  onMIDISuccess(midiAccess):void {\n    var midi = midiAccess;\n    var inputs = midi.inputs.values();\n    // loop through all inputs\n    for (var input = inputs.next(); input && !input.done; input = inputs.next()) {\n        // listen for midi messages\n        input.value.onmidimessage = this.midi;\n        // this just lists our inputs in the console\n        // listInputs(input);\n    }\n    // listen for connect/disconnect message\n    midi.onratechange = onratechange;\n}\n onMIDIFailure(e):void {\n    console.log(\"No access to MIDI devices or your browser doesn't support WebMIDI API. Please use WebMIDIAPIShim \" + e);\n}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"alert alert-success\\\" *ngIf=\\\"registerSuccess\\\">\\n  <strong>Success!</strong>\\n</div>\\n<div class=\\\"page-header\\\">\\n  <h1>Login</h1>\\n</div>\\n\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username_register\\\" aria-describedby=\\\"username\\\" #username placeholder=\\\"Enter username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password_register\\\" #password placeholder=\\\"Password\\\">\\n  </div>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login(username.value, password.value); username.value=''; password.value=''\\\">Login!</button>\\n</form>\\n\"","import { Component, EventEmitter, Input, Output, OnInit }   from '@angular/core';\nimport { Router }                                   from '@angular/router';\nimport { UserService }                              from '../_services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n\n  errorMessage: string;\n  registerSuccess: boolean;\n  mode = 'Observable';\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    // private navbar: NavbarComponent\n  ) { }\n\n  ngOnInit(){\n    this.userService.checkLogin();\n    if(this.userService.user.auth){\n      //already loggedin\n      this.router.navigateByUrl('/');\n    }\n  }\n\n  login(username: string, password: string) {\n    username = username.trim();\n    if (!username) { return; }\n    this.userService.login(username, password)\n      .subscribe(\n      res => {\n        // console.log(res);\n        this.userService.setAuth(res);\n        this.registerSuccess = res.success;\n        this.userService.checkLogin();\n        this.router.navigateByUrl('/');\n      }\n    )\n}\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n        <span class=\\\"glyphicon glyphicon-glass\\\"> Home</span>\\n      </a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-right navbar-nav\\\" *ngIf=\\\"!this.userService.user.auth\\\">\\n        <li><a routerLink=\\\"/login\\\">Login</a></li>\\n        <li><a routerLink=\\\"/register\\\">Register</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-right navbar-nav\\\" *ngIf=\\\"this.userService.user.auth\\\">\\n        <li *ngIf=\\\"this.userService.user.admin\\\">\\n          <a routerLink=\\\"/admin\\\">\\n            <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n          </a>\\n        </li>\\n        <li><a routerLink=\\\"/profile\\\">Profile</a></li>\\n        <li><a (click)=\\\"logout();\\\"><span>Logout</span></a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit }      from '@angular/core';\nimport { UserService }            from '../_services/user.service';\nimport { Router }                 from '@angular/router';\nimport { LoginComponent }         from '../login/login.component'\nimport {BehaviorSubject}          from 'rxjs'\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n\n  constructor(private userService: UserService) { }\n\n \n  ngOnInit() {\n    this.userService.checkLogin();\n  }\n  \n  logout() {\n    this.userService.logout(); \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\n  <div class=\\\"form-group\\\">\\n    <label>UserName</label>\\n    <input value=\\\"{{user.username}}\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input value=\\\"{{user.email}}\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label>First</label>\\n    <input value=\\\"{{user.firstName}}\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label>Last</label>\\n    <input value=\\\"{{user.lastName}}\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>PassHash</label>\\n    <input value=\\\"{{user.password}}\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <!-- <div class=\\\"form-group\\\">\\n    <label>Created</label>\\n    <input value=\\\"{{user.updated_at}}\\\" class=\\\"form-control\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>id</label>\\n    <input value=\\\"{{user._id}}\\\" class=\\\"form-control\\\" disabled>\\n  </div> -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleTextarea\\\">Token</label>\\n    <textarea class=\\\"form-control\\\" rows=\\\"6\\\" disabled>{{token}}</textarea>\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label>Admin</label>\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" *ngIf=\\\"user.admin\\\" checked=\\\"checked\\\" disabled>\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" *ngIf=\\\"!user.admin\\\" disabled>\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label>Active</label>\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" *ngIf=\\\"user.active\\\" checked=\\\"checked\\\" disabled>\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" *ngIf=\\\"!user.active\\\" disabled>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router }            from '@angular/router';\nimport { UserService }       from '../_services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  errorMessage: string;\n  username: string;\n  token: string;\n  user = this.userService.user\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userService.checkLogin();\n    if(!this.userService.user){\n      alert('need to login');\n      this.router.navigateByUrl(\"/login\");\n    }\n    this.getUser();\n    this.token = this.userService.user.token;\n  }\n  \n  getUser() {\n        this.userService.checkUser(this.userService.user.username)\n      .subscribe(\n      res => {\n        // this.userService.user = res.user;\n        console.log(res);\n        this.userService.setUser(res);\n        this.user = this.userService.user;\n      },\n      error => this.errorMessage = <any>error);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"alert alert-success\\\" *ngIf=\\\"registerSuccess\\\">\\n    <strong>Success!</strong>\\n</div>\\n<div class=\\\"page-header\\\">\\n  <h1>Register</h1>\\n</div>\\n\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username_register\\\" aria-describedby=\\\"username\\\" #username placeholder=\\\"Enter username\\\">\\n    <small id=\\\"usernameHelp\\\" class=\\\"form-text text-muted\\\">Pick a good one</small>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password_register\\\" #password placeholder=\\\"Password\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstName\\\">First Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName_register\\\" aria-describedby=\\\"firstName\\\" #firstName placeholder=\\\"Enter firstName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastName\\\">Last Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName_register\\\" aria-describedby=\\\"lastName\\\" #lastName placeholder=\\\"Enter lastName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email_register\\\" aria-describedby=\\\"email\\\" #email placeholder=\\\"Enter Email\\\">\\n  </div>\\n   <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"add(username.value, password.value, firstName.value, lastName.value, email.value); username.value=''; password.value=''; firstName.value=''; lastName.value=''; email.value='';\\\">Register!</button>\\n</form>\\n\"","import { Component, OnInit }        from '@angular/core';\nimport { Router }                   from '@angular/router';\nimport { User }                     from '../_models/user';\nimport { UserService }              from '../_services/user.service';\nimport { Headers, Response }        from '@angular/http';\nimport { HttpClient }               from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  errorMessage: string;\n  registerSuccess: boolean;\n  user: User;\n  res: JSON;\n  mode = 'Observable';\n\n  constructor(\n    private userService: UserService,\n    private router: Router) { }\n\n  add(username: string, password: string, firstName: string, lastName: string, email: string) {\n    username = username.trim();\n    if (!username) { return; }\n    this.userService.register(username, password, firstName, lastName, email)\n      .subscribe(\n      res => {\n        console.log(res);\n        this.registerSuccess = res.success;\n        this.res = res;\n      },\n      error => this.errorMessage = <any>error);\n  }\n\n  ngOnInit() {\n    this.userService.checkLogin();\n    if(this.userService.user.auth){\n      //already loggedin\n      this.router.navigateByUrl('/');\n    }\n  }\n\n}\n","// Observable class extensions\n\n\n// Observable operators\n\n\n\n\n\n\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  envName: \"dev\",\n  apiUrlBase: \"http://localhost:3000/api/\"\n\n};\n","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n"],"sourceRoot":""}